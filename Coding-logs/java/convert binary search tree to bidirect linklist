【题目描述】
输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。

解1：先序遍历二叉树，将遍历结果存入一个队列，再将节点左右链接起来。
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
import java.util.*;

public class Solution {
    public TreeNode Convert(TreeNode pRootOfTree) {
        // 先序遍历O(N), O(N)
        if(pRootOfTree == null)
            return null;
        LinkedList<TreeNode> que = new LinkedList<TreeNode>();
        inOrderToQueue(pRootOfTree, que);
        TreeNode head = que.poll();
        TreeNode cur = head;
        while(que.isEmpty() == false){
            cur.right = que.poll();
            cur.right.left = cur;
            cur = cur.right;
        }
        return head;
    }
    
    public static void inOrderToQueue(TreeNode head, LinkedList<TreeNode> queue){
        if(head == null)
            return ;
        if(head.left != null)
            inOrderToQueue(head.left, queue);
        queue.offer(head);
        if(head.right != null)
            inOrderToQueue(head.right, queue);
    }
}
